  pipeline {
    agent any


    stages {
        stage('Checkout Code') {
            steps {
                echo 'scm git'
                git branch: 'main', url: 'https://github.com/rateshivakumar/Devops_task.git'
            }
        }
    	

        stage('BuildingJar') {
            steps {
                echo 'maven build'
                sh 'cd Application && mvn clean package'
            }
        }
		
	
       stage('Build docker image'){
            steps{
                script{
                    echo 'docker image build'
					sh 'cd Application && docker build -t rateshivakumar/k8s:${BUILD_NUMBER} .'
                }
            }
        }
		
	    stage('Push image to Hub'){
            steps{
                script{
                   withCredentials([string(credentialsId: 'dockerhub', variable: 'dockerhub')]) {
                   sh 'docker login -u rateshivakumar -p ${dockerhub}'

              }
                   sh 'docker push rateshivakumar/k8s:${BUILD_NUMBER}'
                }
            }
        }
		
      stage('Update kubernetes Deployment manifest File') {
        environment {
            GIT_REPO_NAME = "Devops_task"
            GIT_USER_NAME = "rateshivakumar"
        }
        steps {
            withCredentials([string(credentialsId: 'github', variable: 'GITHUB_TOKEN')]) {
                sh '''
                    git config user.email "shiva@gmail.com"
                    git config user.name "shiva"
                    BUILD_NUMBER=${BUILD_NUMBER}
                  
                    sed -i "s/k8s:.*/k8s:${BUILD_NUMBER}/g" Ansible/k8s_deployment.yaml
                    git add .
                    git commit -m "Update deployment image tag to version ${BUILD_NUMBER}"
                    git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} HEAD:main
                '''
            }
        }
    }

     stage('Deploy to Kubernetes') {
       environment {
         AWS_ACCESS_KEY_ID = credentials('aws-creds')
         AWS_SECRET_ACCESS_KEY = credentials('aws-creds')
     }
       steps {
          withKubeConfig([credentialsId: 'kubeconfig']) {
            sh 'kubectl apply -f Ansible/k8s_deployment.yaml --validate=false'
        }
    }
}

}
}
